name: Ruscord Node.js CI Linux Build

on:
  workflow_dispatch:

jobs:
  build-debian:
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye
    permissions:
      contents: read

    steps:
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Установка dev-зависимостей для сборки фронтенда
        run: npm install --save-dev webpack webpack-cli babel-loader @babel/core @babel/preset-env @babel/preset-react

      - name: Установка production зависимостей
        run: npm ci

      - name: Обновить сертификаты
        run: sudo apt-get update && sudo apt-get install -y ca-certificates

      - name: Установка React
        run: npm install react react-dom

      - name: Сборка фронтенда (React) через webpack
        run: npx webpack --mode development

      # --- Билд и загрузка для x64 ---
      - name: Билд для x64 (.deb, .rpm, .tar.xz, .snap, .AppImage, .pacman)
        run: |
          npx electron-builder --linux --x64 --publish=never --config.extraMetadata.arch=x64
          npx electron-builder --linux --x64 --publish=never -m deb,rpm,tar.xz,snap,appimage,pacman

      - name: Загрузка артефактов x64 (.deb)
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-x64-deb
          path: dist/*.deb

      - name: Загрузка артефактов x64 (.rpm)
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-x64-rpm
          path: dist/*.rpm

      - name: Загрузка артефактов x64 (.tar.xz)
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-x64-tarxz
          path: dist/*.tar.xz

      - name: Загрузка артефактов x64 (.snap)
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-x64-snap
          path: dist/*.snap

      - name: Загрузка артефактов x64 (.AppImage)
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-x64-appimage
          path: dist/*.AppImage

      - name: Загрузка артефактов x64 (.pacman)
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-x64-pacman
          path: dist/*.pacman

      - name: Очистка dist перед сборкой ia32
        run: rm -rf dist/*

      # --- Билд и загрузка для ia32 ---
      - name: Билд для ia32 (.deb, .rpm, .tar.xz, .snap, .AppImage, .pacman)
        run: |
          npx electron-builder --linux --ia32 --publish=never --config.extraMetadata.arch=ia32
          npx electron-builder --linux --ia32 --publish=never -m deb,rpm,tar.xz,snap,appimage,pacman

      - name: Загрузка артефактов ia32 (.deb)
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-ia32-deb
          path: dist/*.deb

      - name: Загрузка артефактов ia32 (.rpm)
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-ia32-rpm
          path: dist/*.rpm

      - name: Загрузка артефактов ia32 (.tar.xz)
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-ia32-tarxz
          path: dist/*.tar.xz

      - name: Загрузка артефактов ia32 (.snap)
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-ia32-snap
          path: dist/*.snap

      - name: Загрузка артефактов ia32 (.AppImage)
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-ia32-appimage
          path: dist/*.AppImage

      - name: Загрузка артефактов ia32 (.pacman)
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-ia32-pacman
          path: dist/*.pacman
          
