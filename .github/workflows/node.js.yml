name: Ruscord Node.js CI Linux Build

on:
  workflow_dispatch:

jobs:
  build-debian:
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye
    permissions:
      contents: read

    steps:
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Установка dev-зависимостей для сборки фронтенда
        run: npm install --save-dev webpack webpack-cli babel-loader @babel/core @babel/preset-env @babel/preset-react

      - name: Установка production зависимостей
        run: npm ci

      - name: Установка React
        run: npm install react react-dom

      - name: Сборка фронтенда (React) через webpack
        run: npx webpack --mode development

      - name: Билд для x64
        run: npx electron-builder --linux --x64 --publish=never

      - name: Загрузка артефактов x64
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-x64
          path: dist/*x64*

      - name: Очистка dist перед ia32
        run: rm -rf dist/*

      - name: Билд для ia32
        run: npx electron-builder --linux --ia32 --publish=never

      - name: Загрузка артефактов ia32
        uses: actions/upload-artifact@v4
        with:
          name: Ruscord-ia32
          path: dist/*ia32*
          
